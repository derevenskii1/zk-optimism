{"abi":[{"type":"function","name":"addRoute","inputs":[{"name":"verifier","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"freezeRoute","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"routes","inputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"verifier","type":"address","internalType":"address"},{"name":"frozen","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifyProof","inputs":[{"name":"programVKey","type":"bytes32","internalType":"bytes32"},{"name":"publicValues","type":"bytes","internalType":"bytes"},{"name":"proofBytes","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"view"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RouteAdded","inputs":[{"name":"selector","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"verifier","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RouteFrozen","inputs":[{"name":"selector","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"verifier","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"RouteAlreadyExists","inputs":[{"name":"verifier","type":"address","internalType":"address"}]},{"type":"error","name":"RouteIsFrozen","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"RouteNotFound","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"SelectorCannotBeZero","inputs":[]}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61081f8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063814856f41161005b578063814856f4146100f85780638c95ff1e1461010b5780638da5cb5b1461011e578063f2fde38b1461013957600080fd5b806341493c601461008257806351c7094f14610097578063715018a6146100f0575b600080fd5b61009561009036600461061d565b61014c565b005b6100cc6100a5366004610697565b6001602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152015b60405180910390f35b61009561027c565b610095610106366004610697565b610290565b6100956101193660046106c8565b610373565b6000546040516001600160a01b0390911681526020016100e7565b6100956101473660046106c8565b6104b1565b600061015b60048284866106f1565b6101649161071b565b6001600160e01b031981166000908152600160209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910460ff16151591830191909152919250906101dd576040516379043bbf60e11b81526001600160e01b0319831660048201526024015b60405180910390fd5b80602001511561020c5760405163ebf1082360e01b81526001600160e01b0319831660048201526024016101d4565b805160405163020a49e360e51b81526001600160a01b03909116906341493c6090610243908a908a908a908a908a90600401610774565b60006040518083038186803b15801561025b57600080fd5b505afa15801561026f573d6000803e3d6000fd5b5050505050505050505050565b61028461052a565b61028e6000610584565b565b61029861052a565b6001600160e01b03198116600090815260016020526040902080546001600160a01b03166102e5576040516379043bbf60e11b81526001600160e01b0319831660048201526024016101d4565b8054600160a01b900460ff161561031b5760405163ebf1082360e01b81526001600160e01b0319831660048201526024016101d4565b805460ff60a01b198116600160a01b1782556040517f63ad2363b183cb8bb562b9590c5b4428e2a566260df053db156576d3d171438d916103679185916001600160a01b0316906107ad565b60405180910390a15050565b61037b61052a565b6000816001600160a01b0316632a5104366040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df91906107d0565b90506001600160e01b03198116610409576040516320acd28b60e01b815260040160405180910390fd5b6001600160e01b03198116600090815260016020526040902080546001600160a01b031615610459578054604051632b87e79760e01b81526001600160a01b0390911660048201526024016101d4565b80546001600160a01b0319166001600160a01b0384161781556040517fcb5cc54fa0fda41744197b286ab4135aec7c322cace32c4f55da723d2eb8eee6906104a490849086906107ad565b60405180910390a1505050565b6104b961052a565b6001600160a01b03811661051e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d4565b61052781610584565b50565b6000546001600160a01b0316331461028e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f8401126105e657600080fd5b50813567ffffffffffffffff8111156105fe57600080fd5b60208301915083602082850101111561061657600080fd5b9250929050565b60008060008060006060868803121561063557600080fd5b85359450602086013567ffffffffffffffff8082111561065457600080fd5b61066089838a016105d4565b9096509450604088013591508082111561067957600080fd5b50610686888289016105d4565b969995985093965092949392505050565b6000602082840312156106a957600080fd5b81356001600160e01b0319811681146106c157600080fd5b9392505050565b6000602082840312156106da57600080fd5b81356001600160a01b03811681146106c157600080fd5b6000808585111561070157600080fd5b8386111561070e57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156107435780818660040360031b1b83161692505b505092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b85815260606020820152600061078e60608301868861074b565b82810360408401526107a181858761074b565b98975050505050505050565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b6000602082840312156107e257600080fd5b505191905056fea264697066735822122011616247f75c22e72a943bf92b14f744b86c0ac2497e29d4913fdbc8eed17d5864736f6c634300080f0033","sourceMap":"585:1672:40:-:0;;;;;;;;;;;;-1:-1:-1;936:32:36;719:10:37;936:18:36;:32::i;:::-;585:1672:40;;2433:187:36;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:36;;;-1:-1:-1;;;;;;2541:17:36;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;585:1672:40:-;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063814856f41161005b578063814856f4146100f85780638c95ff1e1461010b5780638da5cb5b1461011e578063f2fde38b1461013957600080fd5b806341493c601461008257806351c7094f14610097578063715018a6146100f0575b600080fd5b61009561009036600461061d565b61014c565b005b6100cc6100a5366004610697565b6001602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152015b60405180910390f35b61009561027c565b610095610106366004610697565b610290565b6100956101193660046106c8565b610373565b6000546040516001600160a01b0390911681526020016100e7565b6100956101473660046106c8565b6104b1565b600061015b60048284866106f1565b6101649161071b565b6001600160e01b031981166000908152600160209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910460ff16151591830191909152919250906101dd576040516379043bbf60e11b81526001600160e01b0319831660048201526024015b60405180910390fd5b80602001511561020c5760405163ebf1082360e01b81526001600160e01b0319831660048201526024016101d4565b805160405163020a49e360e51b81526001600160a01b03909116906341493c6090610243908a908a908a908a908a90600401610774565b60006040518083038186803b15801561025b57600080fd5b505afa15801561026f573d6000803e3d6000fd5b5050505050505050505050565b61028461052a565b61028e6000610584565b565b61029861052a565b6001600160e01b03198116600090815260016020526040902080546001600160a01b03166102e5576040516379043bbf60e11b81526001600160e01b0319831660048201526024016101d4565b8054600160a01b900460ff161561031b5760405163ebf1082360e01b81526001600160e01b0319831660048201526024016101d4565b805460ff60a01b198116600160a01b1782556040517f63ad2363b183cb8bb562b9590c5b4428e2a566260df053db156576d3d171438d916103679185916001600160a01b0316906107ad565b60405180910390a15050565b61037b61052a565b6000816001600160a01b0316632a5104366040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df91906107d0565b90506001600160e01b03198116610409576040516320acd28b60e01b815260040160405180910390fd5b6001600160e01b03198116600090815260016020526040902080546001600160a01b031615610459578054604051632b87e79760e01b81526001600160a01b0390911660048201526024016101d4565b80546001600160a01b0319166001600160a01b0384161781556040517fcb5cc54fa0fda41744197b286ab4135aec7c322cace32c4f55da723d2eb8eee6906104a490849086906107ad565b60405180910390a1505050565b6104b961052a565b6001600160a01b03811661051e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d4565b61052781610584565b50565b6000546001600160a01b0316331461028e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f8401126105e657600080fd5b50813567ffffffffffffffff8111156105fe57600080fd5b60208301915083602082850101111561061657600080fd5b9250929050565b60008060008060006060868803121561063557600080fd5b85359450602086013567ffffffffffffffff8082111561065457600080fd5b61066089838a016105d4565b9096509450604088013591508082111561067957600080fd5b50610686888289016105d4565b969995985093965092949392505050565b6000602082840312156106a957600080fd5b81356001600160e01b0319811681146106c157600080fd5b9392505050565b6000602082840312156106da57600080fd5b81356001600160a01b03811681146106c157600080fd5b6000808585111561070157600080fd5b8386111561070e57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156107435780818660040360031b1b83161692505b505092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b85815260606020820152600061078e60608301868861074b565b82810360408401526107a181858761074b565b98975050505050505050565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b6000602082840312156107e257600080fd5b505191905056fea264697066735822122011616247f75c22e72a943bf92b14f744b86c0ac2497e29d4913fdbc8eed17d5864736f6c634300080f0033","sourceMap":"585:1672:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:521;;;;;;:::i;:::-;;:::i;:::-;;691:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;691:46:40;;;-1:-1:-1;;;691:46:40;;;;;;;;;;-1:-1:-1;;;;;1633:32:47;;;1615:51;;1709:14;;1702:22;1697:2;1682:18;;1675:50;1588:18;691:46:40;;;;;;;;1831:101:36;;;:::i;1872:383:40:-;;;;;;:::i;:::-;;:::i;1344:482::-;;;;;;:::i;:::-;;:::i;1201:85:36:-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:36;;;2173:51:47;;2161:2;2146:18;1201:85:36;2027:203:47;2081:198:36;;;;;;:::i;:::-;;:::i;777:521:40:-;929:15;954:14;966:1;929:15;954:10;;:14;:::i;:::-;947:22;;;:::i;:::-;-1:-1:-1;;;;;;1008:16:40;;979:26;1008:16;;;:6;:16;;;;;;;;;979:45;;;;;;;;;-1:-1:-1;;;;;979:45:40;;;;;-1:-1:-1;;;979:45:40;;;;;;;;;;;;;;1008:16;;-1:-1:-1;979:45:40;1034:168;;1089:23;;-1:-1:-1;;;1089:23:40;;-1:-1:-1;;;;;;3061:33:47;;1089:23:40;;;3043:52:47;3016:18;;1089:23:40;;;;;;;;1034:168;1133:5;:12;;;1129:73;;;1168:23;;-1:-1:-1;;;1168:23:40;;-1:-1:-1;;;;;;3061:33:47;;1168:23:40;;;3043:52:47;3016:18;;1168:23:40;2899:202:47;1129:73:40;1225:14;;1212:79;;-1:-1:-1;;;1212:79:40;;-1:-1:-1;;;;;1212:40:40;;;;;;:79;;1253:11;;1266:12;;;;1280:10;;;;1212:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:379;;777:521;;;;;:::o;1831:101:36:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1872:383:40:-;1094:13:36;:11;:13::i;:::-;-1:-1:-1;;;;;;1969:16:40;::::1;1939:27;1969:16:::0;;;:6:::1;:16;::::0;;;;1999:14;;-1:-1:-1;;;;;1999:14:40::1;1995:89;;2050:23;::::0;-1:-1:-1;;;2050:23:40;;-1:-1:-1;;;;;;3061:33:47;;2050:23:40::1;::::0;::::1;3043:52:47::0;3016:18;;2050:23:40::1;2899:202:47::0;1995:89:40::1;2097:12:::0;;-1:-1:-1;;;2097:12:40;::::1;;;2093:73;;;2132:23;::::0;-1:-1:-1;;;2132:23:40;;-1:-1:-1;;;;;;3061:33:47;;2132:23:40::1;::::0;::::1;3043:52:47::0;3016:18;;2132:23:40::1;2899:202:47::0;2093:73:40::1;2176:19:::0;;-1:-1:-1;;;;2176:19:40;::::1;-1:-1:-1::0;;;2176:19:40::1;::::0;;2211:37:::1;::::0;::::1;::::0;::::1;::::0;2223:8;;-1:-1:-1;;;;;2233:14:40;;2211:37:::1;:::i;:::-;;;;;;;;1929:326;1872:383:::0;:::o;1344:482::-;1094:13:36;:11;:13::i;:::-;1409:15:40::1;1455:8;-1:-1:-1::0;;;;;1434:44:40::1;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1409:72:::0;-1:-1:-1;;;;;;;1495:21:40;::::1;1491:81;;1539:22;;-1:-1:-1::0;;;1539:22:40::1;;;;;;;;;;;1491:81;-1:-1:-1::0;;;;;;1612:16:40;::::1;1582:27;1612:16:::0;;;:6:::1;:16;::::0;;;;1642:14;;-1:-1:-1;;;;;1642:14:40::1;:28:::0;1638:100:::1;;1712:14:::0;;1693:34:::1;::::0;-1:-1:-1;;;1693:34:40;;-1:-1:-1;;;;;1712:14:40;;::::1;1693:34;::::0;::::1;2173:51:47::0;2146:18;;1693:34:40::1;2027:203:47::0;1638:100:40::1;1748:25:::0;;-1:-1:-1;;;;;;1748:25:40::1;-1:-1:-1::0;;;;;1748:25:40;::::1;;::::0;;1789:30:::1;::::0;::::1;::::0;::::1;::::0;1800:8;;1748:25;;1789:30:::1;:::i;:::-;;;;;;;;1399:427;;1344:482:::0;:::o;2081:198:36:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:36;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:36;;4579:2:47;2161:73:36::1;::::0;::::1;4561:21:47::0;4618:2;4598:18;;;4591:30;4657:34;4637:18;;;4630:62;-1:-1:-1;;;4708:18:47;;;4701:36;4754:19;;2161:73:36::1;4377:402:47::0;2161:73:36::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:36;719:10:37;1422:23:36;1414:68;;;;-1:-1:-1;;;1414:68:36;;4986:2:47;1414:68:36;;;4968:21:47;;;5005:18;;;4998:30;5064:34;5044:18;;;5037:62;5116:18;;1414:68:36;4784:356:47;2433:187:36;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:36;;;-1:-1:-1;;;;;;2541:17:36;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:347:47:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:47;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:785::-;465:6;473;481;489;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;602:9;589:23;579:33;;663:2;652:9;648:18;635:32;686:18;727:2;719:6;716:14;713:34;;;743:1;740;733:12;713:34;782:58;832:7;823:6;812:9;808:22;782:58;:::i;:::-;859:8;;-1:-1:-1;756:84:47;-1:-1:-1;947:2:47;932:18;;919:32;;-1:-1:-1;963:16:47;;;960:36;;;992:1;989;982:12;960:36;;1031:60;1083:7;1072:8;1061:9;1057:24;1031:60;:::i;:::-;366:785;;;;-1:-1:-1;366:785:47;;-1:-1:-1;1110:8:47;;1005:86;366:785;-1:-1:-1;;;366:785:47:o;1156:286::-;1214:6;1267:2;1255:9;1246:7;1242:23;1238:32;1235:52;;;1283:1;1280;1273:12;1235:52;1309:23;;-1:-1:-1;;;;;;1361:32:47;;1351:43;;1341:71;;1408:1;1405;1398:12;1341:71;1431:5;1156:286;-1:-1:-1;;;1156:286:47:o;1736:::-;1795:6;1848:2;1836:9;1827:7;1823:23;1819:32;1816:52;;;1864:1;1861;1854:12;1816:52;1890:23;;-1:-1:-1;;;;;1942:31:47;;1932:42;;1922:70;;1988:1;1985;1978:12;2235:331;2340:9;2351;2393:8;2381:10;2378:24;2375:44;;;2415:1;2412;2405:12;2375:44;2444:6;2434:8;2431:20;2428:40;;;2464:1;2461;2454:12;2428:40;-1:-1:-1;;2490:23:47;;;2535:25;;;;;-1:-1:-1;2235:331:47:o;2571:323::-;-1:-1:-1;;;;;;2691:19:47;;2767:11;;;;2798:1;2790:10;;2787:101;;;2875:2;2869;2862:3;2859:1;2855:11;2852:1;2848:19;2844:28;2840:2;2836:37;2832:46;2823:55;;2787:101;;;2571:323;;;;:::o;3106:266::-;3194:6;3189:3;3182:19;3246:6;3239:5;3232:4;3227:3;3223:14;3210:43;-1:-1:-1;3298:1:47;3273:16;;;3291:4;3269:27;;;3262:38;;;;3354:2;3333:15;;;-1:-1:-1;;3329:29:47;3320:39;;;3316:50;;3106:266::o;3377:502::-;3618:6;3607:9;3600:25;3661:2;3656;3645:9;3641:18;3634:30;3581:4;3687:61;3744:2;3733:9;3729:18;3721:6;3713;3687:61;:::i;:::-;3796:9;3788:6;3784:22;3779:2;3768:9;3764:18;3757:50;3824:49;3866:6;3858;3850;3824:49;:::i;:::-;3816:57;3377:502;-1:-1:-1;;;;;;;;3377:502:47:o;3884:299::-;-1:-1:-1;;;;;;4074:33:47;;;;4056:52;;-1:-1:-1;;;;;4144:32:47;4139:2;4124:18;;4117:60;4044:2;4029:18;;3884:299::o;4188:184::-;4258:6;4311:2;4299:9;4290:7;4286:23;4282:32;4279:52;;;4327:1;4324;4317:12;4279:52;-1:-1:-1;4350:16:47;;4188:184;-1:-1:-1;4188:184:47:o","linkReferences":{}},"methodIdentifiers":{"addRoute(address)":"8c95ff1e","freezeRoute(bytes4)":"814856f4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","routes(bytes4)":"51c7094f","transferOwnership(address)":"f2fde38b","verifyProof(bytes32,bytes,bytes)":"41493c60"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"RouteAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"RouteIsFrozen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"RouteNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SelectorCannotBeZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"RouteAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"RouteFrozen\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"addRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"freezeRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"routes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"programVKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"publicValues\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proofBytes\",\"type\":\"bytes\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Succinct Labs\",\"errors\":{\"RouteAlreadyExists(address)\":[{\"params\":{\"verifier\":\"The address of the verifier contract in the existing route.\"}}],\"RouteIsFrozen(bytes4)\":[{\"params\":{\"selector\":\"The verifier selector that was specified.\"}}],\"RouteNotFound(bytes4)\":[{\"params\":{\"selector\":\"The verifier selector that was specified.\"}}]},\"kind\":\"dev\",\"methods\":{\"addRoute(address)\":{\"details\":\"Only callable by the owner. The owner is responsible for ensuring that the specified verifier is correct with a valid VERIFIER_HASH. Once a route to a verifier is added, it cannot be removed.\",\"params\":{\"verifier\":\"The address of the verifier contract. This verifier MUST implement the ISP1VerifierWithHash interface.\"}},\"freezeRoute(bytes4)\":{\"details\":\"Only callable by the owner. Once a route to a verifier is frozen, it cannot be unfrozen.\",\"params\":{\"selector\":\"The verifier selector to freeze.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyProof(bytes32,bytes,bytes)\":{\"details\":\"It is expected that the first 4 bytes of proofBytes must match the first 4 bytes of target verifier's VERIFIER_HASH.\",\"params\":{\"programVKey\":\"The verification key for the RISC-V program.\",\"proofBytes\":\"The proof of the program execution the SP1 zkVM encoded as bytes.\",\"publicValues\":\"The public values encoded as bytes.\"}}},\"stateVariables\":{\"routes\":{\"details\":\"Only one verifier route can be added for each selector.\",\"params\":{\"selector\":\"The verifier selector, which is both the first 4 bytes of the VERIFIER_HASH and the first 4 bytes of the proofs designed for that verifier.\"},\"returns\":{\"frozen\":\"Whether the verifier is frozen.\",\"verifier\":\"The address of the verifier contract.\"}}},\"title\":\"SP1 Verifier Gateway\",\"version\":1},\"userdoc\":{\"errors\":{\"RouteAlreadyExists(address)\":[{\"notice\":\"Thrown when adding a verifier route and the selector already contains a route.\"}],\"RouteIsFrozen(bytes4)\":[{\"notice\":\"Thrown when the verifier route is found, but is frozen.\"}],\"RouteNotFound(bytes4)\":[{\"notice\":\"Thrown when the verifier route is not found.\"}],\"SelectorCannotBeZero()\":[{\"notice\":\"Thrown when adding a verifier route and the selector returned by the verifier is zero.\"}]},\"events\":{\"RouteAdded(bytes4,address)\":{\"notice\":\"Emitted when a verifier route is added.\"},\"RouteFrozen(bytes4,address)\":{\"notice\":\"Emitted when a verifier route is frozen.\"}},\"kind\":\"user\",\"methods\":{\"addRoute(address)\":{\"notice\":\"Adds a verifier route. This enable proofs to be routed to this verifier.\"},\"freezeRoute(bytes4)\":{\"notice\":\"Freezes a verifier route. This prevents proofs from being routed to this verifier.\"},\"routes(bytes4)\":{\"notice\":\"Mapping of 4-byte verifier selectors to verifier routes.\"},\"verifyProof(bytes32,bytes,bytes)\":{\"notice\":\"Verifies a proof with given public values and vkey.\"}},\"notice\":\"This contract verifies proofs by routing to the correct verifier based on the verifier selector contained in the first 4 bytes of the proof. It additionally checks that to see that the verifier route is not frozen.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/sp1-contracts/contracts/src/SP1VerifierGateway.sol\":\"SP1VerifierGateway\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@optimism/=lib/optimism/packages/contracts-bedrock/\",\":@rari-capital/solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/\",\":@sp1-contracts/=lib/sp1-contracts/contracts/\",\":automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/\",\":ds-test/=lib/optimism/packages/contracts-bedrock/lib/solady/lib/ds-test/src/\",\":erc4626-tests/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":optimism/=lib/optimism/\",\":prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady/=lib/optimism/packages/contracts-bedrock/lib/solady/\",\":solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/\",\":sp1-contracts/=lib/sp1-contracts/contracts/\"]},\"sources\":{\"lib/sp1-contracts/contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/sp1-contracts/contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/sp1-contracts/contracts/src/ISP1Verifier.sol\":{\"keccak256\":\"0x35942f0913ca089b75b0d1f5832c931aaf52d7e777db77918d02d0418384dd36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f4f94538e49c45b367fbad0b700e909e58241a8b4d127dfb9befaeeea37a433\",\"dweb:/ipfs/QmRtYbVGyYm1NKbwQ1GCezzxbCnW3fsQEDc9ptU7ha8mUP\"]},\"lib/sp1-contracts/contracts/src/ISP1VerifierGateway.sol\":{\"keccak256\":\"0x68c1fa6d4ef3059944c41ff841ff71427b7594559523295dd5545ab6e9077c74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de7aa2740fa47673d3279934cc43d5f060ff78b621dccb9d5e3413dce2812032\",\"dweb:/ipfs/QmQYXduHKDWg5QhsmmXu9fBA7vknWxMEvETPLyHumDcLt3\"]},\"lib/sp1-contracts/contracts/src/SP1VerifierGateway.sol\":{\"keccak256\":\"0xa21e3504a939e1fb729e128274344ed2dc8379c3e5e7520fbb52da8cc99bc5c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c3d8be046b7e8ae3227beefa6987144d68e10270fdc53e3ec4b16b906cf45b0\",\"dweb:/ipfs/QmdrrwzavBiTwWfvkCz8r2MesuW4gQmckC7w3iGZuHnP66\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"verifier","type":"address"}],"type":"error","name":"RouteAlreadyExists"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"type":"error","name":"RouteIsFrozen"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"type":"error","name":"RouteNotFound"},{"inputs":[],"type":"error","name":"SelectorCannotBeZero"},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4","indexed":false},{"internalType":"address","name":"verifier","type":"address","indexed":false}],"type":"event","name":"RouteAdded","anonymous":false},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4","indexed":false},{"internalType":"address","name":"verifier","type":"address","indexed":false}],"type":"event","name":"RouteFrozen","anonymous":false},{"inputs":[{"internalType":"address","name":"verifier","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addRoute"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"freezeRoute"},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function","name":"routes","outputs":[{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bool","name":"frozen","type":"bool"}]},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"bytes32","name":"programVKey","type":"bytes32"},{"internalType":"bytes","name":"publicValues","type":"bytes"},{"internalType":"bytes","name":"proofBytes","type":"bytes"}],"stateMutability":"view","type":"function","name":"verifyProof"}],"devdoc":{"kind":"dev","methods":{"addRoute(address)":{"details":"Only callable by the owner. The owner is responsible for ensuring that the specified verifier is correct with a valid VERIFIER_HASH. Once a route to a verifier is added, it cannot be removed.","params":{"verifier":"The address of the verifier contract. This verifier MUST implement the ISP1VerifierWithHash interface."}},"freezeRoute(bytes4)":{"details":"Only callable by the owner. Once a route to a verifier is frozen, it cannot be unfrozen.","params":{"selector":"The verifier selector to freeze."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"verifyProof(bytes32,bytes,bytes)":{"details":"It is expected that the first 4 bytes of proofBytes must match the first 4 bytes of target verifier's VERIFIER_HASH.","params":{"programVKey":"The verification key for the RISC-V program.","proofBytes":"The proof of the program execution the SP1 zkVM encoded as bytes.","publicValues":"The public values encoded as bytes."}}},"version":1},"userdoc":{"kind":"user","methods":{"addRoute(address)":{"notice":"Adds a verifier route. This enable proofs to be routed to this verifier."},"freezeRoute(bytes4)":{"notice":"Freezes a verifier route. This prevents proofs from being routed to this verifier."},"routes(bytes4)":{"notice":"Mapping of 4-byte verifier selectors to verifier routes."},"verifyProof(bytes32,bytes,bytes)":{"notice":"Verifies a proof with given public values and vkey."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@optimism/=lib/optimism/packages/contracts-bedrock/","@rari-capital/solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/","@sp1-contracts/=lib/sp1-contracts/contracts/","automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/","ds-test/=lib/optimism/packages/contracts-bedrock/lib/solady/lib/ds-test/src/","erc4626-tests/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/","lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","optimism/=lib/optimism/","prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/","safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/","solady/=lib/optimism/packages/contracts-bedrock/lib/solady/","solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/","sp1-contracts/=lib/sp1-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/sp1-contracts/contracts/src/SP1VerifierGateway.sol":"SP1VerifierGateway"},"evmVersion":"london","libraries":{}},"sources":{"lib/sp1-contracts/contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673","urls":["bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2","dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"],"license":"MIT"},"lib/sp1-contracts/contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"],"license":"MIT"},"lib/sp1-contracts/contracts/src/ISP1Verifier.sol":{"keccak256":"0x35942f0913ca089b75b0d1f5832c931aaf52d7e777db77918d02d0418384dd36","urls":["bzz-raw://9f4f94538e49c45b367fbad0b700e909e58241a8b4d127dfb9befaeeea37a433","dweb:/ipfs/QmRtYbVGyYm1NKbwQ1GCezzxbCnW3fsQEDc9ptU7ha8mUP"],"license":"MIT"},"lib/sp1-contracts/contracts/src/ISP1VerifierGateway.sol":{"keccak256":"0x68c1fa6d4ef3059944c41ff841ff71427b7594559523295dd5545ab6e9077c74","urls":["bzz-raw://de7aa2740fa47673d3279934cc43d5f060ff78b621dccb9d5e3413dce2812032","dweb:/ipfs/QmQYXduHKDWg5QhsmmXu9fBA7vknWxMEvETPLyHumDcLt3"],"license":"MIT"},"lib/sp1-contracts/contracts/src/SP1VerifierGateway.sol":{"keccak256":"0xa21e3504a939e1fb729e128274344ed2dc8379c3e5e7520fbb52da8cc99bc5c8","urls":["bzz-raw://5c3d8be046b7e8ae3227beefa6987144d68e10270fdc53e3ec4b16b906cf45b0","dweb:/ipfs/QmdrrwzavBiTwWfvkCz8r2MesuW4gQmckC7w3iGZuHnP66"],"license":"MIT"}},"version":1},"id":40}